name: face-detection
base: core18 # the base snap is the execution environment for this snap
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: Single-line elevator pitch for your amazing snap # 79 char long summary
description: |
  This is my-snap's description. You have a paragraph or two to tell the
  most important story about your snap. Keep it under 100 words though,
  we live in tweetspace and your description wants to look good in the snap
  store.

grade: devel 
confinement: strict

layout:
  /usr/share/X11:
    bind: $SNAP/usr/share/X11
  
environment:
  XWAYLAND_FULLSCREEN_WINDOW_HINT: title="glxgears"
  
apps:
  camera: 
    command: xwayland-kiosk-launch $SNAP/run_camera
    plugs: 
    - camera
    - desktop
    - opengl
    - wayland
    - network-bind


  video: 
    command: xwayland-kiosk-launch $SNAP/run_video
    plugs: 
    - camera
    - desktop
    - opengl
    - wayland


parts:
  xwayland-kiosk-helper:
    plugin: cmake
    source: https://github.com/MirServer/xwayland-kiosk-helper.git
    build-packages: [ build-essential ]
    stage-packages: [ xwayland, i3, libegl1-mesa, libgl1-mesa-glx ]


    
  patches:
    plugin: dump
    source: patches

  bazel:
    after: [patches]
    plugin: nil
    #source: https://github.com/bazelbuild/bazel
    #source-tag: '3.1.0'
    #source: https://github.com/bazelbuild/bazel/releases/download/3.0.0/bazel-3.0.0-dist.zip
    #source: https://github.com/bazelbuild/bazel/releases/download/2.2.0/bazel-2.2.0-dist.zip
    source: https://github.com/bazelbuild/bazel/releases/download/0.29.1/bazel-0.29.1-dist.zip
    build-packages:
      - build-essential
      - python
      - zip
      - unzip
      - openjdk-11-jdk
      - python-numpy
    stage-packages: [python-numpy]
    override-build: |
      #patch src/main/java/com/google/devtools/build/lib/syntax/BUILD < $SNAPCRAFT_STAGE/patches/BUILD_jni_md 
      #patch scripts/bootstrap/compile.sh < $SNAPCRAFT_STAGE/patches/compile 

      env EXTRA_BAZEL_ARGS="--host_javabase=@local_jdk//:jdk" bash ./compile.sh
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp output/bazel $SNAPCRAFT_PART_INSTALL/bin


      

  tensorflow-python:
    after: [bazel, scripts]
    source: https://github.com/tensorflow/tensorflow.git
    source-tag: 'v2.1.1'
    plugin: python
    python-version: python3
    build-packages: [cython, libatlas-base-dev ]
    python-packages: 
      - numpy
      - pip
      - six
      - wheel
      - setuptools
      - mock 
      - 'future>=0.17.1'
      - keras_applications
      - keras_preprocessing
    override-build: |
      set -x
      snapcraftctl build

      /usr/bin/pip3 install cython
      /usr/bin/pip3 install numpy pip six wheel setuptools mock  'future>=0.17.1' keras_applications keras-preprocessing==1.1.0 

      #export PYTHON_LIB_PATH=$SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages
      export PYTHON_LIB_PATH=$SNAPCRAFT_PART_INSTALL/lib/python3.6/site-packages
      export PYTHON_BIN_PATH=/usr/bin/python3
      
      env
      pip3 install numpy
      ./configure
      bazel build //tensorflow/tools/pip_package:build_pip_package --host_javabase=@local_jdk//:jdk 


      
      ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg
      PREFIX_PATH=$SNAPCRAFT_PART_INSTALL
      pip3 install --install-option="--prefix=$PREFIX_PATH"  /tmp/tensorflow_pkg/tensorflow-*.whl


  opencv-python:
    source: https://github.com/skvark/opencv-python.git
    source-type: git
    plugin: python
    python-version: python3
    build-packages:
    - libssl-dev
    - python-setuptools
    - qt4-default
    stage-packages: 
    - libaudio2
    - libjbig0
    - libjpeg-turbo8
    - libqt4-test
    - libqtcore4
    - libqtgui4
    - libtiff5
    - libblas3
    - libblas-dev
    - python-scipy
    - gcc 
    - gfortran 
    - python-dev
    - liblapack-dev 
    - cython
    python-packages:
      - Cython
      - numpy==1.18.3
      - scikit-build
  
      
    

  face-detection:
    after: [ tensorflow-python]
    #after: [tensorflow-python]
    plugin: python
    source: .
    python-version: python3
    build-packages: 
      - python3
      - mesa-utils
      - pkg-config
      - libcairo2-dev
      - libsystemd-dev
      - system-config-printer
      - python-cups
      - python3-dev
      - git
      - virtualenv
      - build-essential
      - libdbus-glib-1-dev
      - libgirepository1.0-dev
      - libcups2-dev
    stage-packages:
      - libavahi-client3
      - libavahi-common3
      - libcairo-gobject2
      - libcairo2
      - libcups2
      - libfontconfig1
      - libfreetype6
      - libgirepository-1.0-1
      - libice6
      - libpixman-1-0
      - libpng16-16
      - libsm6
      - libx11-6
      - libxau6
      - libxcb-render0
      - libxcb-shm0
      - libxcb1
      - libxdmcp6
      - libxext6
      - libxrender1
    python-packages: 
      - numpy==1.18.3
      #- opencv-python==4.2.0.34
      - Pillow==7.0.0
      - protobuf #==3.12.0
      #- tensorflow==2.2.0
  
  scripts:
    plugin: dump
    source: .
    stage:
      - '*.py'
      - 'model'
      - 'protos'
      - run_camera
      - run_video
