name: face-detection
base: core18 # the base snap is the execution environment for this snap
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: Single-line elevator pitch for your amazing snap # 79 char long summary
description: |
  This is my-snap's description. You have a paragraph or two to tell the
  most important story about your snap. Keep it under 100 words though,
  we live in tweetspace and your description wants to look good in the snap
  store.

grade: devel 
confinement: strict

layout:
  /usr/share/X11:
    bind: $SNAP/usr/share/X11
  
environment:
  XWAYLAND_FULLSCREEN_WINDOW_HINT: title="glxgears"
  XWAYLAND_I3_CONFIG_FILE: $SNAP_DATA/i3.config
  PYTHONPATH: $SNAP/usr/lib/python3.6/site-packages


plugs:
  x11-plug: # because cannot have identical plug/slot name in same yaml.
    interface: x11
  
apps:
  face-detection: 
    command: $SNAP/run_camera
    plugs: 
    - camera
    - desktop
    - desktop-legacy
    - x11-plug
    - opengl
    - wayland
    - network-bind
    - network-control
    - mount-observe
    


  daemon: 
    command: run-daemon xwayland-kiosk-launch $SNAP/run_camera
    daemon: simple
    plugs: 
    - camera
    - desktop
    - opengl
    - wayland
    - network
    - network-bind
    - network-control
    - mount-observe
    - x11-plug
    slots: [ x11 ]

plugs:
  x11-plug: # because cannot have identical plug/slot name in same yaml.
    interface: x11


parts:
  mir-kiosk-snap-launch:
    plugin: dump
    source: https://github.com/MirServer/mir-kiosk-snap-launch.git
    override-build:  $SNAPCRAFT_PART_BUILD/build-with-plugs.sh opengl pulseaudio wayland

  xwayland-kiosk-helper:
    plugin: cmake
    source: https://github.com/MirServer/xwayland-kiosk-helper.git
    build-packages: [ build-essential ]
    stage-packages: [ xwayland, i3, i3status, libegl1-mesa, libgl1-mesa-glx ]

  
  scripts:
    plugin: dump
    source: ./src
    stage:
      - '*.py'
      - 'model'
      - 'protos'
      - run_camera
      - run_video
      - tf_configure.bazelrc
  bazel:
    plugin: nil
    build-packages: [ curl, gnupg ]
    override-build: | 
      case "$SNAPCRAFT_ARCH_TRIPLET" in
        *arm*)
          mkdir -p $SNAPCRAFT_STAGE/bin
          wget https://github.com/powderluv/bazel-bin/raw/master/bazel-aarch64-29
          mv bazel-aarch64-29 $SNAPCRAFT_STAGE/bin/
          ;;
        *x86_64*)
          # install bazel
          curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
          echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          apt update
          apt install -y bazel
          apt install -y bazel-2.0
          ;;
        *)
            echo "Unsupported architecture!"
            exit 1
            ;;
      esac



  tensorflow:
    after: [scripts, bazel]
    plugin: nil
    source: https://github.com/tensorflow/tensorflow.git
    source-tag: 'r2.2'
    build-packages: [python3, python3-dev, python3-pip, curl, gnupg, python3-venv,  gettext-base ]
    override-build: |
      python3 -m venv venv
      . venv/bin/activate
      pip install -U pip six 'numpy<1.19.0' wheel setuptools mock 'future>=0.17.1' 'futures>=0.17.1'
      pip install -U keras_applications --no-deps
      pip install -U keras_preprocessing --no-deps

      # configure build
      envsubst $SNAPCRAFT_STAGE/tf_configure.bazelrc > .tf_configure.bazelrc
      echo 'export PYTHON_BIN_PATH="'$PWD'/venv/bin/python"' > tools/python_bin_path.sh

      # Build Tensforflow
      bazel build --local_ram_resources=2048 --jobs 2 //tensorflow/tools/pip_package:build_pip_package
      #bazel build //tensorflow/tools/pip_package:build_pip_package

      # Build the wheel
      ./bazel-bin/tensorflow/tools/pip_package/build_pip_package ./tensorflow_pkg
      #cp ./tensorflow_pkg/tensorflow-2.2.0-cp36-cp36m-linux_x86_64.whl $SNAPCRAFT_STAGE/
      cp ./tensorflow_pkg/tensorflow-*linux_x86_64.whl $SNAPCRAFT_STAGE/

    


  my-part:
    after: [tensorflow]
    plugin: python
    source: ./src
    python-version: python3
    override-build: |
      snapcraftctl build

      WHEEL_FILE=$SNAPCRAFT_STAGE/tensorflow-*-linux_x86_64.whl
      PYTHONUSERBASE=$SNAPCRAFT_PART_INSTALL python3 -m pip install -I $WHEEL_FILE
      
    build-packages: 
      - python3
      - mesa-utils
      - pkg-config
      - libcairo2-dev
      - libsystemd-dev
      - system-config-printer
      - python-cups
      - python3-dev
      - git
      - virtualenv
      - build-essential
      - libdbus-glib-1-dev
      - libgirepository1.0-dev
      - libcups2-dev
    stage-packages:
      - libavahi-client3
      - libavahi-common3
      - libcairo-gobject2
      - libcairo2
      - libcups2
      - libfontconfig1
      - libfreetype6
      - libgirepository-1.0-1
      - libice6
      - libpixman-1-0
      - libpng16-16
      - libsm6
      - libx11-6
      - libxau6
      - libxcb-render0
      - libxcb-shm0
      - libxcb1
      - libxdmcp6
      - libxext6
      - libxrender1
      - python3-numpy
      - libblas3

    python-packages: 
      #- numpy==1.18.3
      - opencv-python==4.2.0.34
      - Pillow==7.0.0
      - protobuf==3.12.0
